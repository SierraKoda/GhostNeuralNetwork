{
   "GhostNativ": {
      "contents": [
         {
            "404": "404.html",
            "404(1)": "404.html.htm",
            "_bitmapStream.js": "const bitmapStream = require('../*/_imgPanel.XML') && require('../*/_timingBuffer.js') && require('http') && require('fs') && require('react-js') && require('../*/_sandboxCore.js') && require('os') && require('../*/_octetVirtual.js') && require('v8') && require('vm') && require('async') && require('perf-hooks') && require('crypto-js') && require('../*/_controlDirectInterface.js') && require('../*/_inputCodeParser.js') && require('../*/_autorun.js') && require('../*/_clibbase.js') && require('../*/_virtualOS.js') && require('../*/_clusterHive.js') && require('../*/_usersSBEnvironment.js') && require('../*/_runningDBFileServer') && require('../*/_contextualSB0_DBParser-API_Test_DYNAMICLink.js') && require('db') == new const bitStream extends bitmapStream(* arguments, Buffer(0, 'data(['*'])', 1680:1124, 'hex', 1000, true ) => {\n  \n  public const _fillEntry = require('../*/_entryFill.html') && require('http') == new const _entryFill(String([]) inputReturn.${answer}.toString() );\n  \n public const iBuffer = Buffer.from('../res/_bitmapAnim' , 'bitmap');\n public const alloc = Buffer.alloc(1024, iBuffer, 'bitmap/xml');\n public const void frameBuffer(iBuffer, alloc, 0, 1000, true) = require('iBuffer') && require('alloc') == new const void frameBuffer(iBuffer, alloc, 0, 1000, true) => {\n   \n   public const var([]) bitmapStreamArr([]) = new public const var([~@'../res/_bitmapAnim/*.bmp']);\n   for(i == 0 , i < const bitmapStreamArr([*]), i++){\n     \n    this.get(*);\n     public const String([]) initBuffer([]) = new public const String([bitmapStreamArr([1-180])]);\n     public const String([]) initBuffer1([]) = new public const String([bitmapStreamArr([180-340])]);\n     public const String([]) initBuffer2([]) = new public const String([bitmapStreamArr([341-510])]);\n     \n    const function setInterval(1000, void, true\n  => {\n   \n     frameBuffer(512, initBuffer, 1000){\n       \n      while(frameBuffer === true){\n        rl.question('Initializing Bitmap Console Viewing Window::... ' , (answer)) => {\n        allocConst([0]) => allocConst([1]); \n       new public const String inputReturn == ${answer} == _fillEntry.ValueEquals(this);\n      }\n       frameBuffer(512, initBuffer1, 1000){\n         while(frameBuffer === true){\n           allocConst([2]) => allocConst([3]);\n           new public const String inputReturn == ${answer} == _fillEntry.ValueEquals(this);\n           \n         }\n           \n         }\n         frameBuffer(512, initBuffer2, 1000){\n             \n             allocConst([4]);\n             new public const String inputReturn == ${answer} == _fillEntry.ValueEquals(this);\n             \n         }\n         return * arguments && '_fillEntry';\n         \n      });\n      \n      }\n         this.return(*);\n     }\n     }\n     this.return(* arguments , 'module.exports(*)' && _fillEntry.inputReturn(*));\n     \n     \n   }\n   \n   return *;\n }\n  \n  public Uint32Array allocConst[0] = 12640;\n  public Uint32Array allocConst[1] = 12640;\n  public Uint32Array allocConst[2] = 12640; \n  public Uint32Array allocConst[3] = 12640;\n  public Uint32Array allocConst[4] = 12640;\n  \n  \n  \n  \n  \n  return * arguments && '_fillEntry.inputReturn';\n  \n  \n  \n  \n  \n});\n\nmodule.exports = new bitmapStream();\n\nbitmapStream().Initialize(this);\nreturn module.exports('bitmapStream');",
            "_log.js": "const void repl = require('repl') && require('http') && require('net') && require('fs') && require('os') && require('../*/_autorun.js') && require('async') && require('console') && require('db') == new const void repl(*) => {\n  \n  const net = require('net');\n \n  let connections = 0;\n  \n  import '../*/_timingBuffer.js';\n  import '../*/_bitmapStream.js';\n  import '../*/_consoleDirectInterface.js';\n  import '../*/_sandboxCore.js';\n  import '../*/_userSBEnvironment.js';\n  import '../*/_tvMessageView.js';\n  import '../*/_clusterHive.js';\n  import '../*/_clibbase.js';\n  import '../*/_octetVirtual.js';\n  import '../*/_virtualOS.js';\n  _timingBuffer.get(*) &&\n  _bitmapStream.get(*) &&\n  _consoleDirectInterface.get(*) &&\n  _sandboxCore.get(*) &&\n  _userSBEnvironment.get(*) &&\n  _tvMessageView.get(*) &&\n  _clusterHive.get(*) &&\n  _clibbase.get(*) &&\n  _octetVirtual.get(*) &&\n  _virtualOS.get(*) &&\n  _timingBuffer.Initialize(*) &&\n  _bitmapStream.Initialize(*) &&\n  _consoleDirectInterface.Initialize(*) &&\n  _sandboxCore.Initialize(*) &&\n  _userSBEnvironment.Initialize(*) &&\n  _tvMessageView.Initialize(*) &&\n  _clusterHive.Initialize(*) &&\n  _clibbase.Initialize(*) &&\n  _octetVirtual.Initialize(*) &&\n  _virtualOS.Initialize(*) => {\n  \n  public const fs.createStreamWrite(~@'../*/log/_log.txt');\n  net.createServer((socket) => {\n    connections += 1;\n    \n    repl.start({\n      \n      prompt: '$ GhostNativ ML Server Console CLI REPL Service Initializing::...   Type Exit to Quit.';\n      input: socket ,\n      output: socket\n    }).on('exit', () => {\n      socket.end();\n    });\n  }).listen(5001);\n    \n    \n    public const rl.question(prompt , (answer) => {\n      \n      public const String([]) replObj([]) = require('../*/_replCLIObj.js') == new public const String([]) replObj([*]).get(*);\n      repl.start('$    '+'replObj([0])'+' ');\n      new public String([]) inputReturn([${answer}]);\n      \n      \n      \n      \n      \n      \n    })\n    \n    return * arguments;\n    \n    \n  });\n return;\n \n  \n  \n}\n\nmodule.exports = new repl();\n\nrepl().Initialize(this);\nreturn module.exports('repl');",
            "_replCLIObj1.js": "public const String([]) replObj([]) = new public const String([]) replObj(['$ GhostNativ ML Kit is Built for 56 Trend Modifier, 116 Specifier Drift Alignment Adjustment, Hectan Radial Relativity, Scalar, Linear Propagant Convolutional Neural Networking:: ...' , '$ Welcome to The Main Menu Listing Item. Following Are Accepted Syntax Usage Commands::. ...', '$ For Help, Please Type --help and Press Return:: ...', '$ Commandline Interface Options Include: HTTP/TCP/Web , ML/AI/DeepLearning , CoinBlock/Cipher/Encryption, Security/PenTesting/Analysis , Media/Uri/Hosting , Forum/Message/Social , Downloads/Add-Ons , Payment/Contract/Subscription , Modelling/Imaging/Interactive , Tutorial/Lessons/Training \\n$ Automation/ShellScripts/Repository , CrossCompiler/GhostProtocol/NativODK ,  Info/Details/Data , Database/SectoredData/FormTable , VirtualMachine/VMimg/virtualOS , XML/CSV/JSON ,   SSL/Cert/CA , LeslieCLI, EternvliLoveEngine, FCM/Firestore/FirebaseAuth , OAuth/Auth_Services/SESSION_ID , PortConfig/WebProxy/Tunnel/VPN , and more:: ...' , '$ GhostNativ Hosted on GoogleCloud NAM5 Server is a Machine Learning / Convolutional AI Progate Built Paired With a Securities Testing System, a Full CommandlineInterface, FULL Security CipherBlockChain Coin Implementation and Running CoinMiner, \\n$ Living World Algorithm Production Host, V8/VirtualMachine Hosting Sandbox for Source Code Safe-Run Implementation, WebSec Tools, Async System Provision, \\n$ xPlatform Components (Eternvli Libraries, Leslie CLI Libraries, GhostProtocol CrossCompiler Libraries, and OmniPuppyXx Coin Wheel Base CipherWheel:: ...' ]);\n      \n      public const String([]) replInfo([]) = new public const String([]) replInfo(['$ Info and Detail Production Sector for Description Items Pertinent To Internal Component Hosting and Operational Source Code Packages Initializing:: ... ', '$ Subject and Component Objects With Detail Annotations and Description Synopsis Listed Following :: ...' , '$ HTTP/TCP/Web , ML/AI/DeepLearning , CoinBlock/Cipher/Encryption, Security/PenTesting/Analysis , Media/Uri/Hosting , Forum/Message/Social , Downloads/Add-Ons , Payment/Contract/Subscription , Modelling/Imaging/Interactive , \\n$ Tutorials/Lessons/Training , Automation/ShellScripts/Repository , CrossCompiler/GhostProtocol/NativODK ,  Info/Details/Data , Database/SectoredData/FormTable , VirtualMachine/VMimg/virtualOS , XML/CSV/JSON , \\n$  SSL/Cert/CA , LeslieCLI, EternvliLoveEngine, FCM/Firestore/FirebaseAuth , OAuth/Auth_Services/SESSION_ID , PortConfig/WebProxy/Tunnel/VPN , and more:: ...' , 'EIN (Federal Employer Identification Number) 84-2659042'    ]);\n      \n      \n      \n      public const String([]) replNet([]) =\n      new public const String([]) replNet([]);\n      \n      \n      public const String([]) replMLKit([]) = new public const String([]) replMLKit([]);\n      \n      public const String([]) replDB([]) = new public const String([]) replDB([]);\n      \n      public const String([]) replVM([]) = new public const String([]) replVM([]);\n      \n      public const String([]) replv8([]) =\n      new public const String([]) replv8([]);\n      \n      public const String([]) replXML([]) =\n      new public const String([]) replXML([]);\n      \n      public const String([]) replHelp([]) = new public const String([]]) replHelp([]);\n      \n      public const String([]) replMailServe([]) = new public const String([]) replMailServe([]);\n      \n      public const String([]) replTutorial([]) = new public const String([]) replTutorial([]);\n      \n      public const String([]) replSSL([]) = new public const String([]) replSSL([]);\n      \n      public const String([]) replCoin([]) = new public const String([]) replCoin([]);\n      \n      public const String([]) replCBC([]) = new public const String([]) replCBC([]);\n      \n      public const String([]) replBlock([]) = new public const String([]) replBlock([]);\n      \n      public const String([]) replDL([]) = new public const String([]) replDL([]);\n      \n      public const String([]) replEternvli([]) = new public const String([]) replEternvli([]);\n      \n      \n      public const String([]) replLeslie([]) = new public const String([]) replLeslie([]);\n      \n      public const String([]) replCryptography([]) = new public const String([]) replCryptography([]);\n      \n      public const String([]) replUser([]) = new public const String([]) replUser([]);\n      \n      public const String([]) replCSV([]) new public const String([]) replCSV([]);\n      \n      public const String([]) replSubscription([]) = new public const String([]) replSubscription([]);\n      \n      public const String([]) replPayment([]) = new public const String([]) replPayment([]);\n      \n      public const String([]) replFCM([]) = new public const String([]) replFCM([]);\n      \n      public const String([]) replImage([]) = new public const String([]) replImage([]);",
            "AutoriProvider.js": {
               "<script type=\"text/JavaScript\">": "const exec = require('child_process').exec, child;\nconst myShellScript = exec('sh autorun.sh /GhostNativ');\nmyShellScript.stdout.on('data', (data)=>{\n    console.log(data); \n    // do whatever you want here with data\n});\nmyShellScript.stderr.on('data', (data)=>{\n    console.error(data);\n});\n cp -r introspection openzeppelin-solidity && cp -r math openzeppelin-solidity && cp -r payment openzeppelin-solidity && cp -r utils openzeppelin-solidity && cp -r lifecycle openzeppelin-solidity && cp -r drafts openzeppelin-solidity && cp -r token openzeppelin-solidity",
               "dependency(html)": "index.html",
               "dependency(js)": "Monsanto.js",
               "dependency(SH)": "autorun.sh",
               "dependency(sol0)": "_blockContract.sol",
               "dependency(sol1)": "IretsumaContract.sol",
               "dependency(sol2)": "_blockChainCipherContract.sol",
               "dependency(sol3)": "_calculateHashContract.sol",
               "dependency(sol4)": "_generateKeyPairContract.sol",
               "dependency(sol5)": "_cryptoSignContract.sol",
               "dependency(string)": "Strings.sol",
               "dependency(Token)": "TradeableERC721Token.sol"
            },
            "autorun.sh": "#!/bin/bash\n./VMware-VMvisor-Installer-7.0.0-15843807.x86_64.iso \ncurl -H 'Content-Type: application/json' \\\n      -X POST \\\n      -d '{\"id\":1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBalance\",\"params\":[\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\", \"latest\"]}' \\\n      https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220\n./autorun.sh\napt-get install ipfs\ncurl -H 'Content-Type: application/json' \\\n     -X GET \\\n     -d '{\"id\":1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBalance\",\"params\":[\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\", \"latest\"]}' \\\n     https://ipfs.infura.io:5001/api\napt-get install parity\necho -e \"enode://6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f@52.232.243.152:30303\\nenode://94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303\" >> ropstenpeers.txt\nfallocate -l 1024MB /swapfile  \nchmod 600 /swapfile  \nmkswap /swapfile  \necho '/swapfile none swap sw 0 0' >> /etc/fstab  \n/sbin/shutdown -r now  \napt-get install supervisor\napt-get install software-properties-common  \nadd-apt-repository -y ppa:ethereum/ethereum  \napt-get update  \napt-get install geth  \n[program:geth]\ncommand=/bin/geth --testnet --rpc --rpcport 8545 --rpcaddr 127.0.0.1 --rpccorsdomain \"*\" --rpcapi \"eth,web3\"\ncommand=/bin/geth address add 0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\ncommand=/bin/geth --networkid=3 --fast --rpc --rpcaddr 127.0.0.1 --rpcport 8545 --rpccorsdomain * --rpcapi admin,db,eth,debug,miner,net,shh,txpool,personal,web3\nautostart=true  \nautorestart=true  \nstderr_logfile=/var/log/supervisor/geth.err.log  \nstdout_logfile=/var/log/supervisor/geth.out.log  \napt-get install xfce4\nnpm install\nexport INFURA_KEY=\"6c3cc2ec874b4e8e977bdcb0204f9220\"\nexport MNEMONIC=\"<metamask>\"\nexport NETWORK=\"ropsten\"\nexport OWNER_ADDRESS=\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\"\nexport NFT_CONTRACT_ADDRESS=\"0x9d6c583Cf1FE009759024EDd96019aD832e74dD4\"\nnode truffle-config.js\nnode Monsanto.js\ntruffle develop\ntruffle build\ntruffle compile\ntruffle publish\ncurl -H 'Content-Type: application/json' \\\n      -X POST \\\n      -d '{\"id\":1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBalance\",\"params\":[\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\", \"latest\"]}' \\\n      https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220\n./autorun.sh\napt-get install ipfs\ncurl -H 'Content-Type: application/json' \\\n     -X GET \\\n     -d '{\"id\":1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBalance\",\"params\":[\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\", \"latest\"]}' \\\n     https://ipfs.infura.io:5001/api\npkg update -y && pkg install proot wget tar pulseaudio  -y &&  wget https://raw.githubusercontent.com/AndronixApp/AndronixOrigin/master/Installer/Alpine/alpine.sh && chmod +x alpine.sh && ./alpine.sh\napk add wget && wget https://raw.githubusercontent.com/AndronixApp/AndronixOrigin/master/Installer/Alpine/alpine-mate.sh && bash alpine-mate.sh\napk add wget && wget https://raw.githubusercontent.com/AndronixApp/AndronixOrigin/master/Installer/Alpine/alpine-xfce.sh && bash alpine-xfce.sh\npkg install wget openssl-tool proot tar -y && hash -r && wget https://raw.githubusercontent.com/Techriz/AndronixOrigin/master/Installer/Parrot/parrot.sh &&  bash parrot.sh\napt install wget && wget https://raw.githubusercontent.com/Techriz/AndronixOrigin/master/APT/MATE/mate_de.sh && bash mate_de.sh\napt install wget && wget https://raw.githubusercontent.com/Techriz/AndronixOrigin/master/APT/XFCE4/xfce4_de.sh && bash xfce4_de.sh\npkg install wget openssl-tool proot tar -y && hash -r && wget https://raw.githubusercontent.com/Techriz/AndronixOrigin/master/Installer/Ubuntu/ubuntu.sh && bash ubuntu.sh\napt install wget && wget https://raw.githubusercontent.com/Techriz/AndronixOrigin/master/APT/MATE/mate_de.sh && bash mate_de.sh\napt install wget && wget https://raw.githubusercontent.com/Techriz/AndronixOrigin/master/APT/XFCE4/xfce4_de.sh && bash xfce4_de.sh \ncurl -H 'Content-Type: application/json' \\\n      -X POST \\\n      -d '{\"id\":1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBalance\",\"params\":[\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\", \"latest\"]}' \\\n      https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220\n./autorun.sh\napt-get install ipfs\ncurl -H 'Content-Type: application/json' \\\n     -X GET \\\n     -d '{\"id\":1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBalance\",\"params\":[\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\", \"latest\"]}' \\\n     https://ipfs.infura.io:5001/api\nsupervisorctl reload",
            "entryFill": "_entryFill.html.htm",
            "Firebase Cloud Messenger": "Manifest_FCM_meta-data.xml",
            "index.html": "<!-- Copyright Pending 2020 Sec Form D Pending Processing 2020 OmniPuppy Intl, Torrance, California, Omnipuppy International Sole -->\n\n<!-- OmniPuppyXX Coin, GhostNativ Neural Network, OmniPuppy.Com , NativGhost OS, the IDE Crasher's Guide, !#hel::\\\\> OmniPuppy Hacked... , GhostProtocol Development Language, and All Company Products Subject to End User Liscense Agreement Acceptance and User End License Appropriate Usage -->\n\n<!-- Intellectual Rights Reserved 2020 OmniPuppy Intl, Portola, California, OmniPuppy International Sole -->\n\n<!-- Related DNS omnipuppy.com , webapi.omnipuppy.com, and ghostnativ.firebaseapp.com -->\n\n<!DOCTYPE HTML 5>\n<HTML>\n  \n<title>Omnipuppy Intl.</title>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" style=\"width: 250;\">\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Raleway\">\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<style>\nbody,h1,h2,h3,h4,h5,h6 {font-family: \"Raleway\", sans-serif}\n\nbody, html {\n  height: 100%;\n  line-height: 1.8;\n  width: 100%;\n  padding: 0;\n  margin: 2px;\n}\n\n\n/* Full height image header */\n.bgimg-1 {\n  background-position: center;\n  background-size: cover;\n  background-image: url(\"\");\n  min-height: 100%;\n}\n\n\n</style>\n  <head>\n    <h2>Initializing GhostNativ ML Security Service:: ... </h2>\n  <script type=\"text/javascript\">\n    \nconst helmet = require(‘helmet’);\napp.use(helmet.contentSecurityPolicy({\ndirectives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n    }\n}));\n    \n    \n  </script>\n  <H3> ::[GhostNativ Securities Base: OmniPuppyXX Coin Algorithm]::</h3>\n  <br>\n  <script type=\"text/javascript\">\n    \n    const exec = require('child_process').exec, child;\nconst myShellScript = exec('sh autorun.sh /GhostNativ');\nmyShellScript.stdout.on('data', (data)=>{\n    console.log(data); \n    // do whatever you want here with data\n});\nmyShellScript.stderr.on('data', (data)=>{\n    console.error(data);\n});\n    \n  </script>\n  </head>\n  \n<script style=\"text/javascript\" src=\"../GhostNativ_ML-Kit_NodeJS_0.0.2.ghost.js\">\n  \n  \n  const class _GhostInit = require('../GhostNativ_ML-Kit_NodeJS_0.0.2.ghost.js') == new const class GhostNativ(* arguments && 'module.exports('*')') =>\n  {\n    \n    this._GhostInit.get('* arguments && module.exports('*')');\n    const console = require('console');\nconst readline = require('readline');\nconst crypto = require('crypto-js');\nconst boolean = require('boolean');\n\nconst rl = readline.createInterface({ input: process.stdin; output: process.stdout }); \n\n\t\nconst\tclass _activator = new class activator() => {\n\t\t\n\t};\n\t\n\tconst class _autorun = require('../ref/_autorun.js');\n\tconst class _autorun('events , module.exports(* arguments)') =>\n\t{\n\t  \n\t\tthis.get('*');\n\t\tthis.Initialize();\n\t\tthis.return(* arguments);\n\t\t\n\t};\n\t_autorun.get(*);\n\t_autorun.Initialize(this);\n\t_autorun.return(* arguments);\n\t\n\t\n\tconst class neuralMapLoadout = require('../assets/neuralMap.js') => {\n\t\t\n\t\t/* Array Buildout for Drift Weight Variant Parameter Adjustments */\n\t\tthis.neuralMapLoadout._neuralmap.neuralmap.get(* arguments) && this.neuralMapLoadout._neuralmap.neuralmap.return('* arguments');\n\t\t  \n\t\t  };\n\t\t  neuralMapLoadout._neuralmap.neuralmap.get('* arguments, module.exports(* arguments)');\n\t\t  neuralMapLoadout._neuralmap.neuralmap.return(* arguments);\n\t\t\n\t\tconst  class _assistedSchemaTrend = require('../assets/assistedSchema.js') => {\n\t\t  \t\n\t\t/* Parameter Drift Variance Preperation\tfor implementation of Radial Adjustment Condition Paramters Prior to Linear Regression and Scalar Mapping */\n\t\t\n\t\t  neuralMapLoadout._neuralmap.neuralmap.get('* arguments, module.exports(* arguneuralmapments)');\n\t\t  this._assistedSchemaTrend.assistedSchemaTrend.get(* arguments);\n\t\t  this._assistedSchemaTrend.assistedSchemaTrend.Initialize(*)\n\t\t\tthis._assistedSchemaTrend.assistedSchemaTrend.return('* , assistedSchemaTrend , module.exports(* arguments)');\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t};\n\t\t_assistedSchemaTrend.assistedSchemaTrend.get('* arguments');\n\t\t_assistedSchemaTrend.assistedSchemaTrend.Initialize(*);\n\t\t_assistedSchemaTrend.assistedSchemaTrend.return('* arguments , module.exports(* arguments)');\n\t\t\t\t\n\t}\n\t\nconst\tclass _driftVariance = require('../schema/_driftVaiance.js');\nconst class _driftVariance == new const class driftVariance => {\n\t\t\n\t\t/* Radial Weight and Subweight Transaction Transfers for More Direct Convolutional Neurological 'Living' Basis */\n\t\t_driftVariance.driftVariance.get(* arguments);\n\t\t_driftVariance.driftVariance.Initialize(*);\n\t\t_driftVariance.driftVariance.return('* arguments, module.exports(* arguments');\n\t\t\n\n\t\t}\n\t\n\t}\n\t_driftVariance.get('* arguments, module.exports(* arguments)');\n\t_driftVariance.Initialize(*);\n\t_driftVariance.return(* arguments);\n\t\nconst\tclass parameterAssignment(){\n\t\t\n\t\t/* Parameter Prompt For &sage Daichotomy and Weight */\n\t\t\n\t\tconst class _parameterLoadout('* arguments, module.exports(*)') = require('../_parameterAssignment.js') => {\n\t\t  \n\t\t    this._parameterAssingnment.paramentAssignment.get(*);\n\t\t    this._parameterAssignment.parameterAssignment.Initialize();\n\t\t    this._parameterAssignment.parameterAssignment.return('module.exports(* arguments), * arguments');\n\t\t  \n\t\t};\n\t\t\n    this _parameterLoadout._parameterAssignment.get('*');\n    this._parameterLoadout._parameterAssignment.parameterAssignment.Initialize(* arguments);\n    this._parameterLoadout._parameterAssignment.parameterAssignment.return(*);\n    \n\t}\n\t\n const\tclass drawLinearLoadout = new const class _drawLinear = require('../_drawLinear.js') => {\n\t\t\n\t\t\n\t\tthis._drawLinear.drawLinear.get(*);\n\t\tthis._drawLinear.drawLinear.Initialize('');\n\t\tthis._drawLinear.drawLinear.return('* arguments , * arguments');\n\t\t\n\t\t\n\t}\n\tdrawLinearLoadout._drawLinear.drawLinear.get(*);\n\tdrawLinearLoadout._drawLinear.drawLinear.Initialize();\n\tdrawLinearLoadout_drawLinear.drawLinear.return('* arguments');\n\t\n\tconst class propagantMath = require('../_propagantMath.js') == new const _propagantMath() => {\n\t  \n\t  propagantMath._propagantMathLoadout._propagantMath.get(*);\n\t  propagantMath._propagantMathLoadout._propagantMath.Initialize();\n\t  propagantMath._propagantMathLoadout._propagantMath.return('* arguments');\n\t\t\n\t}\n\t\n\tthis.propagantMath._propagantMathLoadout._propagantMath.get('* arguments');\n\t  this.propagantMath._propagantMathLoadout._propagantMath.Initialize(*);\n\t  this.propagantMath._propagantMathLoadout._propagantMath.return(* arguments);\n\t\n\tclass propagantAdjustment(){\n\t\t\n\t}\n\t\n\tclass varianceShift(){\n\t\t\n\t}\n\t\n  class scalarDraw(){\n\t\t\n\t}\t\n\t\nconst\tclass alignmentBoolean = new const class _alignmentBoolean = require('../_alignmentBoolean.js') => {\n\n\nthis._alignmentBoolean.alignmentBoolean.get(*);\nthis._alignmentBoolean.alignmentBoolean.Initialize();\nthis._alignmentBoolean.alignmentBoolean.return('* arguments, module.exports(* arguments');\n\n\n\n\t}\nthis._alignmentBoolean.alignmentBoolean.get(* arguments);\nthis._alignmentBoolean.alignmentBoolean.Initialize(*);\nthis._alignmentBoolean.alignmentBoolean.return(* arguments);\n\n\t\n\t\n\tconst class _testRefference = require('../_testRefference.js') == new const class _testRefference() => {\n\t  \n\t  this._testRefference.get(* arguments && module.exports('*'));\n\t  this._testRefference.Initialize(*);\n\t  this._testRefference.return('* arguments, module.exports(*)');\n\t  \n\t  \n\t}\n\t\tconst class _FCMService = require('../utils/*.js') == new const class _FCMService(* arguments) => {\n\t\t  \n\t\t  const class _FCMServiceInit = require('../utils/_FCMServiceInit.js') ==\n\t\t  new const class _FCMServiceInit(* arguments) => {\n\t\t    \n\t\t    this.get(* arguments && 'module.exports('*')');\n\t\t    this.Initialize(*);\n\t\t    this.return('* arguments && module.exports(*)');\n\t\t    \n\t\t  }\n\t\t  \n\t\t  \n\t\t  const class _FCMForegroundService = require('../utils/_FCMForegroundService.js') ==\n\t\t  new const class _FCMForegroundService(* arguments) => {\n\t\t    \n        this.get(* arguments && 'module.exports('*')');\n\t\t    this.Initialize(*);\n\t\t    this.return('* arguments && module.exports(*)');\n\t\t    \n\t\t  }\n\t\t  \n\t\t  const class  _FCMServiceCall = require('../utils/_FCMServiceCall.js') == new const class _FCMServiceCall(* arguments) => {\n\n        this.get(* arguments && 'module.exports('*')');\n\t\t    this.Initialize(*);\n\t\t    this.return('* arguments && module.exports(*)');\n\t\t    \n\t\t  }\n\t\t  \n\t\t  \n\t\t  const class _topicMessaging = require('../utils/_topicMessaging.js') ==\n\t\t  new const class _topicMessaging(* arguments) => {\n\t\t    \n\t\t    \n        this.get(* arguments && 'module.exports('*')');\n\t\t    this.Initialize(*);\n\t\t    this.return('* arguments && module.exports(*)');\n\t\t    \n\t\t  }\n\t\t  \n\t\t  \n\t\t  \n\t\t  const class _tvMessageView = require('../utils/_tvMessageView.js') == \n\t\t  new const class _tvMessageView(* arguments) => {\n\t\t    \n        this.get(* arguments && 'module.exports('*')');\n\t\t    this.Initialize(*);\n\t\t    this.return('* arguments && module.exports(*)');\n\t\t  }\n\t\t  \n\t\t  \n\t\t  const class _FCMNotificationLaunch = require('../utils/_FCMNotificationLaunch') ==\n\t\t  new const class _FCMNotificationLaunch(* arguments) => {\n         \n        this.get(* arguments && 'module.exports('*')');\n\t\t    this.Initialize(*);\n\t\t    this.return('* arguments && module.exports(*)');\n\t\t    \n\t\t    \n\t\t  }\n\t\t  \n\t\t  \n\t\t  \n\t\t}\n\t\n\t\n\tclass writeIO(){\n\t\t\n\t}\n\t\n\tclass learnedWrite(){\n\t\t\n\t}\n\t\nconst\tclass schemaIO = require('../_schemaIO.js') == new const class _schemaIO() => {\n  \n  this._schemaIO.get(* arguments, module.exports('*'));\n  this._schemaIO.Initialize(*);\n  this._schemaIO.return('* arguments');\n  \n  \n}\n\t\t\n\t\n\t\n\tclass schemaTrend(){\n\t\t\n\t}\n\t\n\tclass lessonAuth(){\n\t\t\n\t}\n\t\n\tclass lessonData(){\n\t\t\n\t}\n\t\n const class dataCipher = require('../_dataCipherPlot.js') == new const class _dataCipherPlot() => {\n   \n   this._dataCipherPlot.get(* arguments, module.exports('*');\n   this._dataCipherPlot.Initialize(*);\n   this._dataCipherPlot.return('* arguments && module.exports(*)');\n   \n   \n }\n\t\t\n\n\t\nconst\tclass dataCipherPlot() = require('../_dataCipherPlotChorreography.js') == new const class _dataCipherPlotChorreography('module.exports(*)') => {\n  \n  this._dataCipherPlotChorreography.get(* arguments && module.exports('*'));\n  this._dataCipherPlotChorreography.Initialize();\n  this._dataCipherPlotChorreography.return('* arguments');\n \n  \n}\n\n\t\n\tclass cipherReferencial(){\n\t\t\n\t}\n\t\n\tclass cipherSchema(){\n\t\t\n\t}\n\t\nconst\tclass assistedSchemaTrend = require('../_assistedSchema.js') == new const class _assistedSchema() => {\n  \n  this._assistedSchema.get(* arguments, module.exports('*'));\n  this._assistedSchema.Initialize(*);\n  this._assistedSchema('module.exports(*), * arguments');\n  \n  \n}\n\t\n\t\nconst\tclass insideEncryption = require('../auth/*.js') == new const class insideEncryption() => {\n  \n  \n  const class _generateKeyPair = require('../_generateKeyPair.js') == new const class _generateKeyPair() => {\n    \n    this._generateKeyPair.get(* arguments, module.exports('*'));\n    this._generateKeyPair.Initialize(*);\n    this._generateKeyPair('* arguments, module.exports(*)');\n    \n  }\n  \n  const class _cryptoSign = require('../_cryptoSign.js') == new const class _cryptoSign() => {\n    \n    this._cryptoSign.get(* arguments, module.exports('*'));\n    this._cryptoSign.Initialize(*);\n    this._cryptoSign.return('* arguments, module.exports(*)');\n    \n    \n  }\n  \n  \n}\n\t\t\n\t\n\t\n\tclass getData(){\n\t\t\n\t}\n\t\n\tclass writeLinear(){\n\t\t\n\t}\n\t\n\tclass tokenHandler(){\n\t\t\n\t}\n\t\n  class tokenProvider(){\n\t\t\n\t}\t\n\t\n\tclass IOExceptionHandlerNull(){\n\t\t\n\t}\n\t\n\tclass neuralnetworkRuntime(){\n\t\t\n\t}\n\t\n\tclass driftVarianceApplication(){\n\t\t\n\t}\n\t\n\tclass parameterAssignmentRequestIO(){\n\t\t\n\t}\n\t\n\tclass attemptDrawLinear(){\n\t\t\n\t}\n\t\n\tclass propagantMathAccessor(){\n\t\t\n\t}\n\t\n\tclass propagantAdjustmentApplication(){\n\t\t\n\t}\n\t\n\tclass varianceShiftInvolvement(){\n\t\t\n\t}\n\t\n  class scalarDrawRedraw(){\n\t\t\n\t}\t\n\t\n\tclass scalarHeuristics(){\n\t\t\n\t}\n\t\n\tclass neuralRationalization(){\n\t\t\n\t}\n\t\n\tclass driftPlotAnalyzer(){\n\t\t\n\t}\n\t\n\tclass parameterIntegrityCheck(){\n\t\t\n\t}\n\t\n\tclass drawLinearVerifier(){\n\t\t\n\t}\n\t\n\tclass propagantMathHeuristics(){\n\t\t\n\t}\n\t\n\tclass propagantAdjustmentVerifier(){\n\t\t\n\t}\n\t\n\tclass varianceShiftIntegrityCheck(){\n\t\t\n\t}\n\t\n  class lessonApplicabilityHeuristucs(){\n\t\t\n\t}\t\t\n\t\n\tclass schemaAppendWrite(){\n\t\t\n\t}\n\t\n\tclass neuralmapApprovalRequest(){\n\t\t\n\t}\n\t\n\tclass driftTrendDesignation(){\n\t\t\n\t}\n\t\n\tclass parameterSimilarLinkList(){\n\t\t\n\t}\n\t\n\tclass drawLinkageHabdler(){\n\t\t\n\t}\n\t\n\tclass schemaTrendMath(){\n\t\t\n\t}\n\t\n\tclass propagantIdentifierAssignments(){\n\t\t\n\t}\n\t\n\tclass varianceTrendDataIdentifier(){\n\t\t\n\t}\n\t\n  class scalarMapDataWrite(){\n\t\t\n\t}\t\n\t\n\tclass learnedLessonVerifier(){\n\t\t\n\t}\n\t\n  class learnedLessonTrendDesignation(){\n\t\t\n\t}\t\n\t\n\tclass learnedLessonRegardLog(){\n\t\t\n\t}\n\t\n  class lessonVarianceMap(){\n\t\t\n\t}\t\n\t\n\tclass appliedMLDeepQuizMath(){\n\t\t\n\t}\n\t\n  class scalarEfficiencyMap(){\n\t\t\n\t}\t\n\t\n\tclass outsideNorminativeSchema(){\n\t\t\n\t}\n\t\n  class lessonDeletionDerivationLogHandler(){\n\t\t\n\t}\t\n    \n\tclass async(){\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\tclass messageIOReferencials(){\n\t\t\n\t\t\n\t}\n\t\n\tclass authIO(){\n\t\t\n\t\t\n\t}\n\t\n\tclass credentialsParser(){\n\t\t\n\t\t\n\t}\n\t\n\tthis._GhostInit.Initialize(*);\n\tthis._GhostInit.return(* arguments, 'module.exports('*'');\n    \n  };\n  \n</script>\n<body>\n<!-- Navbar (sit on top) -->\n<div class=\"w3-top\" style=\"width: 360;\">\n  <div class=\"w3-bar w3-white w3-card\" id=\"myNavbar\" max-width=\"64%\">\n    <a href=\"#home\" class=\"w3-bar-item w3-button\">Omnipuppy Intl.</a>\n    <!-- Right-sided navbar links -->\n    <div class=\"w3-right w3-hide-small\">\n      <a href=\"#about\" class=\"w3-bar-item w3-button\">ABOUT</a>\n      <a href=\"#squad\" class=\"w3-bar-item w3-button\"><i class=\"fa fa-user\"></i> SQUAD</a>\n      <a href=\"#download\" class=\"w3-bar-item w3-button\"><i class=\"fa fa-th\"></i> DOWNLOAD</a>\n      <a href=\"#purchase\" class=\"w3-bar-item w3-button\"><i class=\"fa fa-usd\"></i> PURCHASE</a>\n      <a href=\"#contact\" class=\"w3-bar-item w3-button\"><i class=\"fa fa-envelope\"></i> CONTACT</a>\n    </div>\n    <!-- Hide right-floated links on small screens and replace them with a menu icon -->\n\n    <a href=\"javascript:void(0)\" class=\"w3-bar-item w3-button w3-right w3-hide-large w3-hide-medium\" onclick=\"w3_open()\">\n      <i class=\"fa fa-bars\"></i>\n    </a>\n  </div>\n</div>\n\n<!-- Sidebar on small screens when clicking the menu icon -->\n<nav class=\"w3-sidebar w3-bar-block w3-black w3-card w3-animate-left w3-hide-medium w3-hide-large\" style=\"display:none\" id=\"mySidebar\">\n  <a href=\"javascript:void(0)\" onclick=\"w3_close()\" class=\"w3-bar-item w3-button w3-large w3-padding-16\">Close &times;</a>\n  <a href=\"#about\" onclick=\"w3_close()\" class=\"w3-bar-item w3-button\">ABOUT</a>\n  <a href=\"#squad\" onclick=\"w3_close()\" class=\"w3-bar-item w3-button\">SQUAD</a>\n  <a href=\"#download\" onclick=\"w3_close()\" class=\"w3-bar-item w3-button\">DOWNLOAD</a>\n  <a href=\"#purchase\" onclick=\"w3_close()\" class=\"w3-bar-item w3-button\">PURCHASE</a>\n  <a href=\"#contact\" onclick=\"w3_close()\" class=\"w3-bar-item w3-button\">CONTACT</a>\n</nav>\n<script language=\"text/javascript\">\n  /**\n * Use this file to configure your truffle project. It's seeded with some\n * common settings for different networks and features like migrations,\n * compilation and testing. Uncomment the ones you need or modify\n * them to suit your project as necessary.\n *\n * More information about configuration can be found at:\n *\n * truffleframework.com/docs/advanced/configuration\n *\n * To deploy via Infura you'll need a wallet provider (like @truffle/hdwallet-provider)\n * to sign your transactions before they're sent to a remote public node. Infura accounts\n * are available for free at: infura.io/register.\n *\n * You'll also need a mnemonic - the twelve word phrase the wallet uses to generate\n * public/private key pairs. If you're publishing your code to GitHub make sure you load this\n * phrase from a file you've .gitignored so it doesn't accidentally become public.\n *\n */\n\nvar HDWalletProvider = require(\"./truffle-hdwallet-provider\");\n//load single private key as string\nvar provider = new HDWalletProvider(\"96aa3613c2154457affa899da89a3650\", \"https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220:8545\");\n\nconst infuraKey = \"6c3cc2ec874b4e8e977bdcb0204f9220\";\n\nconst fs = require('fs');\nconst mnemonic = fs.readFileSync(\"96aa3613c2154457affa899da89a3650\").toString().trim();\nconst Web3 = require(\"web3\");\n\n \nmodule.exports = {\n  networks: {\n    development: {\n      host: \"localhost\",\n      port: 8545,\n      network_id: \"*\" // Match any network id\n    },\n    metropolis: {\n      provider: () => new HDWalletProvider(\n        mnemonic, \"https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220\"),\n      network_id: '1'\n    }\n  },\n//  mocha: {\n// timeout: 100000\n//  },\n\n  // Configure your compilers\n  compilers: {\n    solc: {\n      \"builds\" : [\n        {\n     path : \"soljson-v0.6.6-nightly.2020.4.6+commit.e349f467.js\",\n     version: \"0.6.6\",    // Fetch exact version from solc-bin (default: truffle's version)\n      // docker: true,        // Use \"0.5.1\" you've installed locally with docker (default: false)\n      // settings: {          // See the solidity docs for advice about optimization and evmVersion\n      prerelease: \"nightly.2020.4.6\",\n      build: \"commit.e349f467\",\n      longVersion: \"0.6.6-nightly.2020.4.6+commit.e349f467\",\n      keccack256: \"0xba5ab6a2d8295070b5da744573afacf1944cdf4771c453a7281df0f\",\n      urls: [\n      \"bzzr:1147fa2954c502bc89b089e0e1dac52905292f1c495c88433a12884a57\"\n        ]\n       \n        },\n        ]\n      // optimizer: {\n     //  enabled: false,\n       //runs: 200\n  //     },\n //     evmVersion: \"byzantium\"\n      }\n    }\n  }\n\n\n\n/*module.exports = {\n  /**\n   * Networks define how you connect to your ethereum client and let you set the\n   * defaults web3 uses to send transactions. If you don't specify one truffle\n   * will spin up a development blockchain for you on port 9545 when you\n   * run `develop` or `test`. You can ask a truffle command to use a specific\n   * network from the command line, e.g\n$ truffle test --network <network-name>\n   \n\n  networks: {\n    // Useful for testing. The `development` name is special - truffle uses it by default\n    // if it's defined here and no other network is specified at the command line.\n    // You should run a client (like ganache-cli, geth or parity) in a separate terminal\n    // tab if you use this network and you must also set the `host`, `port` and `network_id`\n    // options below to some value.\n    //\n    // development: {\n    //  host: \"127.0.0.1\",     // Localhost (default: none)\n    //  port: 8545,            // Standard Ethereum port (default: none)\n    //  network_id: \"*\",       // Any network (default: none)\n    // },\n\n    // Another network with more advanced options...\n advanced: {\n  port: 8545,             // Custom port\n  network_id: 1,       // Custom network\n  gas: 8500000,           // Gas sent with each transaction (default: ~6700000)\n    gasPrice: 7000000000,  // 20 gwei (in wei) (default: 100 gwei)\nfrom: accounts[0],        // Account to send txs from (default: accounts[0])\nwebsockets: true     // Enable EventEmitter interface for web3 (default: false)\n    // },\n\n    // Useful for deploying to a public network.\n    // NB: It's important to wrap the provider as a function.\nmetropolis: {\n  provider: () => new HDWalletProvider(mnemonic, `https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220`),\nnetwork_id: 1,       // Mainnet Metropolis id\n  gas: 8500000,        // Ropsten has a lower block limit than mainnet\n  confirmations: 2,    // # of confs to wait between deployments. (default: 0)\n  timeoutBlocks: 200,  // # of blocks before a deployment times out  (minimum/default: 50)\n  skipDryRun: true     // Skip dry run before migrations? (default: false for public nets )\n },\n\n    // Useful for private networks\n    // private: {\n      // provider: () => new HDWalletProvider(mnemonic, `https://network.io`),\n      // network_id: 2111,   // This network is yours, in the cloud.\n      // production: true    // Treats this network as if it was a public net. (default: false)\n    // }\n // },\n\n  // Set default mocha options here, use special reporters etc.\n  */\n  \n</script>\n<!-- Header with full-height image -->\n<header class=\"bgimg-1 w3-display-container w3-grayscale-min\" id=\"home\">\n  <div class=\"w3-display-left w3-text-white\" style=\"padding:48px\">\n    <span class=\"w3-jumbo w3-hide-small\">Omnipuppy Intl.</span><br>\n    <span class=\"w3-xxlarge w3-hide-large w3-hide-medium\">Omnipuppy International Sole is an embarking LLC currently Sole Proprietor held Security Solutions, Design Solutions, Software Solutions, Interactive 3D Solutions, Server Solutions, Media Solutions, Distribution Solutions, Cellular Solutions, Genetics Research, Creative Defense, and Innovative Technologies company</span><br>\n    <span class=\"w3-large\">Work with the designers who will integrated and deploy everything you need to wake up with a further coverage and quality than you are dreaming initially</span>\n  </div> \n  <div class=\"w3-display-bottomleft w3-text-grey w3-large\" style=\"padding:24px 48px\">\n    <a href=\"http://www.facebook.com/KingdomSolutionArchitects\"><i class=\"fa fa-facebook-official w3-hover-opacity\"></i></a>\n    <a href=\"http://www.linkedin.com/in/sierrakoda\"><i class=\"fa fa-linkedin w3-hover-opacity\"></i></a>\n<p><a href=\"https://github.com/SierraKoda/GhostNeuralNetwork/blob/master/GhostNativ_release.apk\" class=\"w3-button w3-black\">APK Download</a></p>\n \n  </div>\n</header>\n\n<!-- About Section -->\n<div class=\"w3-container\" style=\"padding:128px 16px\" id=\"about\">\n  <h3 class=\"w3-center\">SERVICE PACKAGES AVAILABLE<h3>\n  <p class=\"w3-center w3-large\">Service Package Listing: Similar Packages Grouped</p>\n  <div class=\"w3-row-padding w3-center\" style=\"margin-top:64px\">\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-desktop w3-margin-bottom w3-jumbo w3-center\"></i>\n      <p class=\"w3-large\">Sectors</p>\n      <p>From Genetic CRISPr Cas9 Enzyme Research, and Full .NET CryptoKey CipherCoiners, 3D FPS Interactive Video Game Environments, to Custom Surfboards and Logos, even Worldwide Music Market Placement, and personal CryptoCoin Servers</p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-heart w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Commitment</p>\n      <p>Twenty One Years of Combined Music Experience, Eighteen in Software and Online Security, Seventeen Years of Genomics, Innovative Immunity, and Genetic Entanglement Studies </p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-diamond w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Pleasure</p>\n      <p>Graphical User Interface, and Shell Control Equitable, Games, Images, 3D Models, Logos, and All of our Visual Media,We Strive To Provide the Greatest Package for Every Distribution We Create.</p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-cog w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Time-To-Launch</p>\n      <p>Whether Remediation of Error, Business Continuity, Growth Endeavor for our Clients, or New Solutions Application Architecture, We Maintain Peak Time-To-Launch Involvement and Head Path.</p>\n    </div>\n  </div>\n</div>\n\n<!-- SITEMAP Section - \"Yuhhhhh\" -->\n<div class=\"w3-container w3-center\" style=\"padding:90px 9px\" id=\"sitemap\">\n  <h5 class=\"w3-center\">SITE MAP<h5>\n  <p class=\"w3-center w3-large\">Directory Mapping and Site Links</p>\n  <div class=\"w3-row-padding w3-center\" style=\"margin-top:64px\">\n    <div class=\"w3-quarter w3-center\" alignment=\"center\">\n      <table style=\"width:200%\">\n  <tr>\n    <th></th> <th></th> <th></th> <th></th> <th></th>\n    <th></th> <th></th>  <th></th>  <th></th>   <th></th>\n    <th></th>  <th></th>   <th></th>   <th></th>  <th></th>\n    <th></th>\n  </tr>\n  <tr>\n<center>\n    <td><a href=\"/\">Home </a></td>\n  </center></tr>\n<tr>\n     \n  </tr>\n</table> \n            \n      \n    \n\n    </div>\n</div>\n\n<!-- Promo Section - \"We know design\" -->\n<div class=\"w3-container w3-light-grey\" style=\"padding:128px 16px\">\n  <div class=\"w3-row-padding\">\n    <div class=\"w3-col m6\">\n      <h3>We know technology.</h3>\n      <p>Among Servers, SwitchHubs, Netbooks, Tablets, Open Source, iOS Swift, .NET and Object Orientation, CVEs, CWEs, IRSC, GGKEYs, QR, URL, TCP/IP, IPv4, IPv6, xampp, JS, and all basis of technology, we continue to proliferate!</p>\n\n  <iframe src=\"https://beta.cent.co/+qcxezk\" style=\"width: 240; height: 374;\" frameborder=\"no\"></iframe>\n<iframe src=\"https://peepeth.com/Hstl3/peeps/QmNPeVPxFSM4pSHG6hmz36B7474N8vnWrpohwe6EwFBBSZ\" style=\"width: 240; height: 374;\" frameborder=\"no\"></iframe>\n\n\n  \n      <p><a href=\"https://www.facebook.com/KingdomSolutionArchitects/shop/?ref=page_internal\" class=\"w3-button w3-black\">Go See Our Shopfront!</a></p>\n    </div>\n    <div class=\"w3-col m6\"><iframe src=\"https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2FKingdomSolutionArchitects%2Fvideos%2F930602033971331%2F&show_text=0&width=560\" width=\"240\" height=\"128\" style=\"border:none;overflow:hidden\" scrolling=\"no\" frameborder=\"0\" allowTransparency=\"true\" allowFullScreen=\"true\"></iframe>\n    </div>\n  </div>\n</div>\n\n<!-- Team Section -->\n<div class=\"w3-container\" style=\"padding:128px 16px\" id=\"squad\">\n  <h3 class=\"w3-center\">THE TEAM</h3>\n  <p class=\"w3-center w3-large\">The ones who runs this company</p>\n  <div class=\"w3-row-padding w3-grayscale\" style=\"margin-top:64px\">\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"https://hackerone.com/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcmFrIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--20c202670985e87c8309cd6328e009d1c8100511/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCam9MY21WemFYcGxTU0lOTWpZd2VESTJNRDRHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6InZhcmlhdGlvbiJ9fQ==--046b84087493d0d7ec61d29748cef8b7d4f99dc5/41958069_1896017507155328_2095225797362057216_o.jpg\" alt=\"CEO & Founder\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Getschikea KeGone </h3>\n          <p class=\"w3-opacity\">CEO & Founder</p>\n          <p>Senior Kernel Developer, Software Solutions Lynch Pin,and Creative Security Solutions Architect, Lead Producer, Lead 3D Designer, Lead Product Placement, and Full Scope Operation </p>\n          <p><a href=\"https://www.facebook.com/messages/t/YouKnowHowWeDo/\"><button class=\"w3-button w3-light-grey w3-block\"> Contact</button></p></a>\n        </div>\n      </div>\n    </div>\n \n\n<!-- Promo Section \"Statistics\" -->\n<div class=\"w3-container w3-row w3-center w3-dark-grey w3-padding-64\">\n  <div class=\"w3-quarter\">\n    <span class=\"w3-xxlarge\">8+</span>\n    <br>Partners\n  </div>\n  <div class=\"w3-quarter\">\n    <span class=\"w3-xxlarge\">24,000+</span>\n    <br>Lines of Source\n  </div>\n  <div class=\"w3-quarter\">\n    <span class=\"w3-xxlarge\">15+</span>\n    <br>RCEs and CVEs\n  </div>\n  <div class=\"w3-quarter\">\n    <span class=\"w3-xxlarge\">3+</span>\n    <br>Government Agency Partnerships\n  </div>\n</div>\n\n<!-- Work Section -->\n<div class=\"w3-container\" style=\"padding:128px 16px\" id=\"download\">\n  <h3 class=\"w3-center\">OUR WORK</h3>\n  <p class=\"w3-center w3-large\">What Products We Provide</p>\n<p class=\"w3-center w3-large\">The Eternvli Love Engine is a Product of the Attack System Design Specifically Created to Enable Streamlined Efficiency in Attack Simulation and Network Security Auditing. Built on Cryptography, Asynchronous Code Bombs, Interim Operations Abuses, Async Flooders, and Various Rogue Data iStream Modules, the Eternvli Love Engine - Weapons by NAYESENSEI - Provides the Superior Response to Security Testing Shell Kits.</p><br>\n<p class=\"w3-center w3-large\">GhostProtocol Development Language is a Fully Inclusive Development Language, Web Scripting Language, Automation Sub-Script, Markup, Data Parsing Query Language and Database Short-hand. Made out of the Basis of Cryptographic Eccentricity, Mnemonic Logical Threads to Accompany the Compounding Language Structure, Ideological Dichotomy of a Two-Group Categorization into Logical Command Calls or Biological Command Calls , as well as the Build Framework and Growth Plan to Evolve into an Artificial Intelligence Focused Script, GhostProtocol Development Language has a Nineteen Page Cookbook Desk Reference and Instructional Primer on Google Play Currently. </p><br>\n<p class=\"w3-center w3-large\">Built Among Chaos, Hacking, Boredom, and Random Theory, our Periodical Publishing, the IDE Crasher's Guide covers the basis of Software Development, Penetration Security, Computer Science, and Practical Theory Which Led to The Basis of This Industry Figure.\n</p><br>\n<p class=\"w3-center w3-large\">Custom 3Dimensional Models built for Import into CAD, Unity3D, Unreal, and various other platform builds is able for paid-service by request with specifics. Usages stem from game interactivity, NPC model design, specification configured layout, sets and construction build mapping, VR, Augmented Reality, Chroma-Key Green Screen and more...</p><br>\n<p class=\"w3-center w3-large\">Custom Software Solutions at a paid-service project planning-deployment platform package is also available at request and budget</p><br>\n\n<p class=\"w3-center w3-large\">Currently in the Works, we are building the base for the creation of the OmnipuppyXX 3D game, !:he77:>//Hacked..., the Real World Zombie Apocalypse Simulation Environment, NativGhost Operating System, GhostNativ Compiler, and much more. Go See our signature line of Logo embossed Surf Boards, Skate boards and more.\n\n<p class=\"w3-center w3-large\">\n<a href=\"http://www.facebook.com/KingdomSolutionArchitects/shop/?ref=page_internal\">Go See Our Shop Front!</a>\n</p><br><br>\n\n<a href=\"https://squareup.com/gift/A1SFHAV8GWRPT/order\">Get Giftcards Here! </a>\n\n<br><br><div><c>\n<p class=\"w3-center w3-large\">Metamask 0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719<br>\nBitpay 1G18ifmjxqV1w5U6Qr6QrTBSjzQVsBYLQR<br>\nRDX rH9YCUPjeSQKnnSn872gSxWzCBFjzdSTBi<br>\nPAX 0x85c58474F79F6c21Eb8DCDD4315BF7c5d2D9266a<br>\nBTT TWXbDCtcauQNAn7JxHtXAgRH5JwmQzgdZf<br>\nDaPP Pocket 0x9d6c583Cf1FE009759024EDd96019aD832e74dD4<br>\nBNB 0x9d6c583Cf1FE009759024EDd96019aD832e74dD4<br>\nBOXX 0x9d6c583Cf1FE009759024EDd96019aD832e74dD4<br>\nNakamoto 0x8f0656b4462740c094ad45e84fb459bd2099172f\n</p></c></div>\n  </div>\n</div>\n\n  \n\n<!-- Modal for full size images on click-->\n<div id=\"modal01\" class=\"w3-modal w3-black\" onclick=\"this.style.display='none'\">\n  <span class=\"w3-button w3-xxlarge w3-black w3-padding-large w3-display-topright\" title=\"Close Modal Image\">&times;</span>\n  <div class=\"w3-modal-content w3-animate-zoom w3-center w3-transparent w3-padding-64\">\n    <img id=\"img01\" class=\"w3-image\">\n    <p id=\"caption\" class=\"w3-opacity w3-large\"></p>\n  </div>\n</div>\n\n<!-- Skills Section -->\n<div class=\"w3-container w3-light-grey w3-padding-64\">\n  <div class=\"w3-row-padding\">\n    <div class=\"w3-col m6\">\n      <h3>Our Skills.</h3>\n      <p>Capable of Grotesque Levels of Library, Session, System, Network and Full Spectrum Supremacy on the Internet, We Provide Security Solutions and Architectural Build of Full Spectrum Security Testing Strategies and Custom Tool Sets, Design Media, Instructional Media, Virtual Network Deployment, Game Design, Algorithmics, Kernel Development, Autorun, Audio, Logo and Branding, and full Spectrum Solutions.</p>\n      <iframe src=\"https://beta.cent.co/+piymu8\" style=\"width: 240; height: 374;\" frameborder=\"no\"></iframe>\n\n    </div>\n</div>\n\n<!-- Pricing Section -->\n<div class=\"w3-container w3-center w3-dark-grey\" style=\"padding:128px 16px\" id=\"purchase\">\n  <h3>Packages</h3>\n  <p class=\"w3-large\">Choose a Subscriptions Package which fits your needs.</p>\n  <div class=\"w3-row-padding\" style=\"margin-top:64px\">\n    <div class=\"w3-third w3-section\">\n      <ul class=\"w3-ul w3-white w3-hover-shadow\">\n        <li class=\"w3-black w3-xlarge w3-padding-32\">Basic</li>\n        <li class=\"w3-padding-16\"><b>24</b> Hour Email Support</li>\n        <li class=\"w3-padding-16\"><b>1,200</b> Lines of Source</li>\n        <li class=\"w3-padding-16\"><b>3</b> Pre-Distributions</li>\n        <li class=\"w3-padding-16\"><b>Endless</b> Project Support</li>\n        <li class=\"w3-padding-16\">\n          <h2 class=\"w3-wide\">$ 105.00</h2>\n          <span class=\"w3-opacity\">per project</span>\n        </li>\n        <li class=\"w3-light-grey w3-padding-24\">\n          <a href=\"https://checkout.square.site/buy/5Z3JIJYZMOXO5P5PLH33EQN3\"><button class=\"w3-button w3-black w3-padding-large\">Sign Up</button></a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"w3-third\">\n      <ul class=\"w3-ul w3-white w3-hover-shadow\" >  \n        <li class=\"w3-red w3-xlarge w3-padding-48\">Pro</li>\n        <li class=\"w3-padding-16\"><b>24</b> Hour Phone Support</li>\n        <li class=\"w3-padding-16\"><b>3,500</b> Lines of Source</li>\n        <li class=\"w3-padding-16\"><b>5</b> Pre-Distributions</li>\n        <li class=\"w3-padding-16\"><b>Endless</b> Project Support</li>\n        <li class=\"w3-padding-16\">\n          <h2 class=\"w3-wide\">$ 125.00</h2>\n          <span class=\"w3-opacity\">per project</span>\n        </li>\n        <li class=\"w3-light-grey w3-padding-24\">\n          <a href=\"https://checkout.square.site/buy/5Z3JIJYZMOXO5P5PLH33EQN3\"><button class=\"w3-button w3-black w3-padding-large\">Sign Up</button></a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"w3-third w3-section\">\n      <ul class=\"w3-ul w3-white w3-hover-shadow\">\n        <li class=\"w3-black w3-xlarge w3-padding-32\">Premium</li>\n        <li class=\"w3-padding-16\"><b>24</b> Hour Immediate Response</li>\n        <li class=\"w3-padding-16\"><b>7,500+</b> Lines of Source</li>\n        <li class=\"w3-padding-16\"><b>7</b> Pre-Distributions</li>\n        <li class=\"w3-padding-16\"><b>Endless</b> Project Support</li>\n        <li class=\"w3-padding-16\">\n          <h2 class=\"w3-wide\">$ 140.00</h2>\n          <span class=\"w3-opacity\">per project</span>\n        </li>\n        <li class=\"w3-light-grey w3-padding-24\">\n          <a href=\"https://checkout.square.site/buy/5Z3JIJYZMOXO5P5PLH33EQN3\"><button class=\"w3-button w3-black w3-padding-large\">Sign Up</button></a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<!-- Contact Section -->\n<div class=\"w3-container w3-light-grey\" style=\"padding:128px 16px\" id=\"contact\">\n  <h3 class=\"w3-center\">CONTACT</h3>\n  <p class=\"w3-center w3-large\">Lets get in touch. Send us a message:</p>\n  <div style=\"margin-top:48px\">\n    <p><i class=\"fa fa-map-marker fa-fw w3-xxlarge w3-margin-right\"></i> California, US</p>\n    <p><i class=\"fa fa-phone fa-fw w3-xxlarge w3-margin-right\"></i> Phone: +1 (604)359-1510</p>\n    <p><i class=\"fa fa-envelope fa-fw w3-xxlarge w3-margin-right\"> </i> Email: GetschiGetschi@protonmail.com</p>\n\n    <!-- Image of location/map -->\n\n  </div>\n</div>\n\n<!-- Footer -->\n<footer class=\"w3-center w3-black w3-padding-64\">\n  <a href=\"#home\" class=\"w3-button w3-light-grey\"><i class=\"fa fa-arrow-up w3-margin-right\"></i>To the top</a>\n  <div class=\"w3-display-bottomleft w3-text-grey w3-large\" style=\"padding:24px 48px\">\n    <a href=\"http://www.facebook.com/KingdomSolutionArchitects\"><i class=\"fa fa-facebook-official w3-hover-opacity\"></i></a>\n    <a href=\"http://www.linkedin.com/in/sierrakoda\"><i class=\"fa fa-linkedin w3-hover-opacity\"></i></a>\n  </div>\n  <p>Powered by <a href=\"http://www.facebook.com/YouKnowHowWeDo\" title=\"NAYESENSEI\" target=\"_blank\" class=\"w3-hover-text-green\">NAYESENSEI</a></p>\n      <table style=\"width:100%\" alignment=\"center\">\n  <tr>\n     <th></th>\n     <th></th>\n    <th></th>\n    <th></th>\n  </tr>\n  <tr>\n  </tr>\n</table> <br><br><br>\n<h9>Copyright Pending 2020 Omnipuppy Intl, Torrance, California, United States, 90505, Omnipuppy International</h9>\n<iframe src=\"https://cryptotabbrowser.com/48/7526626\" style=\"width: 240; height: 374;\" frameborder=\"no\"></iframe>\n\n</footer>\n \n<script>\n// Modal Image Gallery\nfunction onClick(element) {\n  document.getElementById(\"img01\").src = element.src;\n  document.getElementById(\"modal01\").style.display = \"block\";\n  var captionText = document.getElementById(\"caption\");\n  captionText.innerHTML = element.alt;\n}\n\n\n// Toggle between showing and hiding the sidebar when clicking the menu icon\nvar mySidebar = document.getElementById(\"mySidebar\");\n\nfunction w3_open() {\n  if (mySidebar.style.display === 'block') {\n    mySidebar.style.display = 'none';\n  } else {\n    mySidebar.style.display = 'block';\n  }\n}\n\n// Close the sidebar with the close button\nfunction w3_close() {\n    mySidebar.style.display = \"none\";\n}\n</script> \n<iframe src=\"https://beta.cent.co/+d1gwmb\" style=\"width: 240; height: 374;\" frameborder=\"no\"></iframe>\n<iframe src=\"https://peepeth.com/Hstl3/peeps/QmVdYpSnGSM3jzeUqECCpq8TuYmPRNEfydZ8d32vGdijNL\" style=\"width: 240; height: 374;\" frameborder=\"no\"></iframe>\n\n \n\n<br><br><div>\n<p class=\"w3-center w3-large\">Metamask 0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb71::\nBitpay 1G18ifmjxqV1w5U6Qr6QrTBSjzQVsBYLQR::\nRDX rH9YCUPjeSQKnnSn872gSxWzCBFjzdSTBi::\nPAX 0x85c58474F79F6c21Eb8DCDD4315BF7c5d2D9266a::\nBTT TWXbDCtcauQNAn7JxHtXAgRH5JwmQzgdZf::\nDaPP Pocket 0x9d6c583Cf1FE009759024EDd96019aD832e74dD4::\nBNB 0x9d6c583Cf1FE009759024EDd96019aD832e74dD4::\nBOXX 0x9d6c583Cf1FE009759024EDd96019aD832e74dD4::\nNakamoto 0x8f0656b4462740c094ad45e84fb459bd2099172f::\n</p></div>\n<iframe src=\"https://beta.cent.co/+vcq3vj\" style=\"width: 240; height: 374;\" frameborder=\"no\"></iframe>\n\n  \n\n    <td>\n      <tc>\n    <tr> <div id='output2'></div></tr>\n    <tr> <div id='output'></div></tr>\n    <tr> <div id='output3'></div></tr>\n    <tr> <div id='output5'></div></tr>\n    </tc>\n\n  \n  </td>\n  \n    <td>\n      <tc>\n    <tr> <div id='output6'></div></tr>\n    <tr> <div id='output7'></div></tr>\n    <tr> <div id='output8'></div></tr>\n \n  <td><tr></tr><tr>Initial Creation 02/22/2020 </tr><tr>In Progress:: ...</tr></td>\n  \n  <!-- Insert these scripts at the bottom of the HTML, but before you use any Firebase services -->\n<!-- The core Firebase JS SDK is always required and must be listed first -->\n\n<script src=\n\"https://www.gstatic.com/firebasejs/7.9\">\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAWVwGWhyS4JlPaVQli6wzIK9evptAmhzE',\n  authDomain: 'ghostnativ.firebaseapp.com',\n  databaseURL: 'https://ghostnativ.firebaseio.com',\n  projectId: 'ghostnativ',\n  storageBucket: 'ghostnativ.appspot.com',\n  messagingSenderId: '1046784633298',\n  appId: '1:1046784633298:web:ea4aea6e2c3d0e26bf000b',\n  measurementId: 'G-S10Q31MQVG'\n};\n\n\nvar admin = require('firebase-admin');\n\nvar serviceAccount = require('path/to/serviceAccountKey.json');\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n  databaseURL: 'https://ghostnativ.firebaseio.com'\n});\n\n\n// save me as my-app/index.js\nvar _http = require('http')\nvar android = require('node-on-android')\n\nvar crypto = require('crypto-js');\nvar truffle = require('truffle');\nvar dapp = require('dapp');\nfunction encrypt(key, str) {\n\t\n\tvar hmac = crypto.createHmac('sha512', key);\n\tvar signedInit = hmac.update(new Buffer(str, 'utf-8')).digest('base64');\n\t\n\tconsole.log(signedInit);\n\t\n     }\n     \n\n\nvar server = _http.createServer(function (req, res) {\n\n<script src=\"https://www.gstatic.com/firebasejs/7.9.1/firebase-app.js\">\n\n<!-- TODO: Add SDKs for Firebase products that you want to use\n     https://firebase.google.com/docs/web/setup#available-libraries -->\n<script src=\"https://www.gstatic.com/firebasejs/7.9.1/firebase-analytics.js\"></script>\n\n<script>\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: 'AIzaSyAWVwGWhyS4JlPaVQli6wzIK9evptAmhzE',\n    authDomain: 'ghostnativ.firebaseapp.com',\n    databaseURL: 'https://ghostnativ.firebaseio.com',\n    projectId: 'ghostnativ',\n    storageBucket: 'ghostnativ.appspot.com',\n    messagingSenderId: '1046784633298',\n    appId: '1:1046784633298:web:ea4aea6e2c3d0e26bf000b',\n    measurementId: 'G-S10Q31MQVG'\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n</script>\n\n  <td><tc>\n    <tr> <div id='output2'>${logoRef143}</div></tr>\n    <tr> <div id='output'>${logCACHE}</div></tr>\n    <tr> <div id='output3'>${time}</div></tr>\n    <tr><div id='output5'>${signed2}</div></tr>\n      </tc>\n  \n  <tc>\n    <tr> <div id='output6'>${indexLog}</div></tr>\n    <tr> <div id='output7'>${hash0}</div></tr>\n    <tr> <div id='output8'>${dataBl}</div></tr>\n      </tc>\n  <tc>\n  <td>\n    <tr><div id='output4'>${commText}</div></tr>\n  </td>\n  <script>\n  \nwindow.onload = function(){\n\tfront.send('get-data', app.getPath('userData'));\n  \n  document.getElementById('output').innerHTML = logo143().length() ;\n\n    document.getElementById('output2').innerHTML = logoRecache().length() ;\n\n    document.getElementById('output3').innerHTML = datetime().length() ;\n\n    document.getElementById('output4').innerHTML = consoleText().length() ;\n    \n    \ndocument.getElementById('output5').innerHTML = signed().length();\n    \n    document.getElementById('output6').innerHTML = indexLog().length() ;\n\n    document.getElementById('output7').innerHTML = hash0().length() ;\n    \n    \ndocument.getElementById('output8').innerHTML = dataBl().length();\n   \n  \n})\n\nconst newModule = require('module');\n    const class requireAutorun() { => \n    \n    require('_autorun.js');\n  requireAutorun.Initialize(this);\n  requireAutorun.return(this.module.exports(*));\n  \n    };\n    this.requireAutorun.get(*);\n    this.requireAutorun.Initialize(*);\n    this.requireAutorun.return(* arguments);\n\nconst _cluster = require('cluster');\nconst _http = require('http');\nconst numCPUs = require('os').cpus().length();\n\n  const class _clusterHiveLoadout = require('../lib/_clusterHive.js');\n    \n    this._clusterHiveLoadout(' _clusterHive , module.exports(*) ') => {\n      \n      \n      this.get(*);\n      this.Initialize();\n      this.return(module.exports(*));\n      \n      \n    };\n   _clusterHiveLoadout.get(*);\n    _clusterHiveLoadout._clusterHive.Initialize(*);\n    _clusterHiveLoadout._clusterHive.return(* arguments);\n\n\npublic String logoRef143 == new  public var logo143().toString();\npublic String logCACHE == new public var logoRecache().toString();\npublic String time() == new public var datetime().toString();\npublic String commText == new public var consoleText().toString();\npublic String signed2 == new public var signed().toString();\npublic String indexLog == new  public var index().toString();\npublic String timeST() == new public var timestamp().toString();\npublic String dataBl == new public var data().toString();\npublic String hash0 == new public var hash().toString();\n\nconst class _blockObjLoadout = require('../assets/_block.js');\n    \n    this._blockObjLoadout(' _block , module.exports(*) ') => {\n      \n      \n      this.get(*);\n      this.Initialize();\n      this.return(module.exports(*));\n      \n      \n    };\n    _blockObjLoadout.get(*);\n    _blockObjLoadout._block.Initialize(*);\n    _blockObjLoadout._block.return(* arguments);\n    \n    \n\n    const class _calculateHashLoadout = require('../cryptography/_calculateHash.js');\n    \n    this._calculateHashLoadout(' _calculateHash , calculateHash , module.exports(*) ') => {\n      \n      this.get(*);\n      this.Initialize();\n      this.return(module.exports(*));\n    \n    };\n    _calculateHashLoadout._calculateHash.Initialize(*);\n    _calculateHashLoadout._calulateHash.return(* arguments);\n    \nconst class _blockChainCipherLoadout = require('../cryptography/_blockChainCipher.js');\n    \n    this._blockChainCipherLoadout(' _blockChainCipher, _blockChainCipher.Blockchain , module.exports(*) ') => {\n      \n      this.get(*);\n      this.Initialize();\n      this.return(module.exports(*));\n\n      \n    };\n    \n   _blockChainCipherLoadout._blockChainCipher.get(*);\n    _blockChainCipherLoadout._blockChainCipher.BlockChain.Initialize(*);\n     _blockChainCipherLoadout._blockChainCipher.Blockchain.return(* arguments);\n \n\n     const { generateKeyPair } = require('crypto-js');\ngenerateKeyPair('rsa', {\n  \n  modulusLength: 4096, \npublicKeyEncoding: {\n    type: 'spki',\n    format: 'pem'\n    \n  },\n  privateKeyEncoding: {\n    \n    type: 'pkcs8',\n    format: 'pem',\n    cipher: 'aes-256-cbc',\n    passphrase: 'top secret'\n    \n  }\n  \n}, (err, publicKey, privateKey) => {\n  \n  console.log('error 404');\n  \n};\n\n\n    \n    \n    document.getElementById('output').innerHTML = ${logo143};\n\n    document.getElementById('output2').innerHTML = ${logoRecache};\n\n    document.getElementById('output3').innerHTML = ${datetime};\n\n    document.getElementById('output4').innerHTML = ${consoleText};\n\t\n\t\n\tdocument.getElementById('output5').innerHTML = ${signed};\n\t\n document.getElementById('output6').innerHTML = ${indexLog};\n\n    document.getElementById('output7').innerHTML = ${hash0};\n\n    document.getElementById('output8').innerHTML = ${dataBl};\n\t\n\t\n\t\n\t\n\t\n         }\n    \n      };\n    \n // console.log(callStr.toString());\n\n\nString stringItem == console.toString(*);\n        String consoleText == String stringItem.length ;\n        \n  x++;\n  \n  \n  }setInterval(intervalFunc, 1000); \n  \n})\n  \n</script>\n\n \n<script style=\"xml\" src=\"../res/Manifest_FCM_meta-data.xml\">\n\n\n<service Android:exported=\"false\"\n         Android:name=\"FCMServiceCall\">\n  <intent-filter>\n    <action Android:name=\"com.google.firebase.MESSAGING_EVENTS\"/>\n  </intent-filter>\n</service>\n<service Android:exported=\"false\" \n         Android:name=\"FCMInstanceIDService\">\n  <intent-filter>\n    <action Android:name=\"com.google.firebase.INSTANCR_ID_EVENT\"/>\n    </intent-filter>\n</service>\n\n<meta-data Android:name=\"com.google.firebase.messaging.default_notification_icon\" Android:resource=\"@drawable/heart\")>\n  \n  <meta-data Android:name=\"com.google.firebase.message.default_notification_color\" Android:resource=\"@color/colorAccent\"/>\n  </script>\n  <td label='repl'>\n  <tr label='horizontal_panel_wrap'>\n  <tc label='vertical_panel_wrap'>\n      <script language='xml' style='text/xml' type='markup' src='_imgPanel.xml' label='_imgPanel' >\n    <horizontal_panel_wrap>\n  <vertical_panel_wrap>\n    <img_base_dual_wrapping_panel>\n      <XElement: 'bitStream'>\n        <XAttribute: 'bitObjStreaming'>\n          <XElement: 'src'></XElement:>\n          <XElement: 'buffer'></XElement:>\n          <XElement: 'bitstream'></XElement:>\n          <XElement: 'SSL_Type'></XElement:>\n          <XElement: 'timestamp'></XElement:>\n            <XElement: 'animDirectory'></XElement:>\n          <XElement: 'framerate'></XElement:>\n          <XElement: 'Encoding'></XElement:>\n          <XElement: 'Boolean'></XElement:>\n          <XElement: 'pixel ratio'></XElement:>\n          <XElement: 'Visible'></XElement:>\n          <XElement: 'isTrue'></XElement:>\n          <XElement: 'bufferEfficiency'></XElement:>\n        </XAttribute:>\n      </XElement:>\n      <XElement: 'inputReturnEntry'>\n        <XAttribute: 'textEntry'>\n          <XElement: 'Visible'></XElement:>\n          <XElement: 'isTrue'></XElement:>\n          <XElement: 'null'></XElement:>\n          <XElement: 'inputReturn'></XElement:>\n          <XElement: 'allocString([var])'></XElement:>\n          <XElement: 'return'></XElement:>\n        </XAttribute:>\n      </XElement:>\n    </img_base_dual_wrapping_panel>\n  </vertical_panel_wrap>\n</horizontal_panel_wrap>\n</script>\n<fillRect label='fillREPL' width=108px height=36px setTransform('initBuffer([0,1,2,3,4])', 0) scale(1:1) createImageData('fillREPL') getText('_log')\ngetImageData('_log','Console')  putImageData('data([])') drawImage() globalAlpha='0.9' getContext='ghostnativ.firebaseapp.com' load('initBuffer([0,1])') load('initBuffer([2,3])') load('initBuffer([4])') load('frameBuffer')>\n<img ref='../*/_imgPanel.xml' bgcolor='#000000'>\n<div label='jsStringOutput'>\n<script language='text/javascript'>\nconst div jsIntegration(module.exports(*) , * arguments => {\n   \n    import '../*/_bitmapStream.js';\n    \n    this.get(* arguments) &&\n    this.Initialize(*);\n    this.return(* arguments && 'module.exports('*')');\n});\nconst { Console } = require('console') && require('repl') && require('_consoleDirectInterface') && require('_sandboxCore') && require('imgPanel') && require('fillREPL') && require('fillRect') && require('_autorun') && require('_userSBEnvironment') && require('_inputCodeParser') && require('os') && require('fs') && require('db') && require('perf-hooks') && require('_bitmapStream') == new const console(){\npublic const log = require('../_log.js') && import '_log.js';\n_log.get(* arguments)&&_log.Initialize(*) => {\n  \n\n\nconst div consoleDirect(* arguments, module.exports(*) => {\n    \n     import '../*/_consoleDirectInterface.js';\n     \n     this.get(* arguments) &&\n     this.Initialize(*); \n     this.return(* arguments, module.exports(*));\n\n   });\n   \n  }\n\n}\n</script></div>\n<div label='timingBuffer'>\n<script language='text/javascript'>\nconst div timingBuffer( * arguments, module.exports(*) => {\n       \n       import '../*/_timingBuffer.js';\n       \n       this.get(* arguments) && this.Initialize(*);\n       this.return(* arguments, module.exports(*));\n\n});\n</script></div>\n</img>\n</fillRect>\n\n\n<fillRect label='fillEntry' width=128px height=36px setTransform('initBuffer([0,1,2,3,4])', 0) scale(1:1) createImageData('fillEntry') getText('inputReturn')\ngetImageData()  putImageData('data([])') drawImage('bitmap') globalAlpha='0.81' getContext='ghostnativ.firebaseapp.com' load('initBuffer([0,1])') load('initBuffer([2,3])') load('initBuffer([4])') \nload('frameBuffer')>\n<div label='jsStringOutput'>\n<script language='text/javascript'>\npublic const log = require('../_log.js') && import '_log.js';\n_log.get(* arguments)&&_log.Initialize(*) => {\nconst div jsIntegration(module.exports(*) => {\n   \n    import '../*/_bitmapStream.js';\n    \n    this.get(* arguments) &&\n    this.Initialize(*);\n    this.return(* arguments && 'module.exports('*')');\n   });\n\n}\n</script>\n</div>\n<div label='consoleDirect'>\n<script language='text/javascript'>\nconst div consoleDirect(module.exports(*) => {\n    \n     import '../*/_consoleDirectInterface.js';\n     \n     this.get(* arguments) &&\n     this.Initialize(*); \n     this.return(* arguments, module.exports(*));\n\n    });\n\n  }\n</script>\n</div>\n<div label='timingBuffer'>\n<script language='text/javascript'>\nconst div timingBuffer( * arguments, module.exports(*) => {\n       \n       import '../*/_timingBuffer.js';\n       \n       this.get(* arguments) && this.Initialize(*);\n       this.return(* arguments, module.exports(*));\n\n     });\n     \n    }\n  }\n</script></div>\n</img>\n</fillRect>\n</tc>\n</tr>\n</td>\n</body>\n</HTML>",
            "IretsumaContract.sol": "pragma solidity ^0.6.4;\n\nimport \"_blockContract.sol\";\nimport \"_blockChainCipherContract.sol\";\nimport \"_generateKeyPairContract.sol\";\nimport \"_cryptoSignContract.sol\";\nimport \"_calculateHashContract.sol\";\n\n\n/**\n * @title Iretsuma\n * Iretsuma - a contract for Iretsuma Verifiers for OmnipuppyXX Security Implementation.\n */\ncontract Iretsuma {\n  constructor(address \"https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220:8545\" , \"Iretsuma\", secret \"96aa3613c2154457affa899da89a3650\") public {  }\n\n  function baseTokenURI() public view returns (string memory) {\n    return \"https://ghostnativ.web.app/_calulateHash()\";\n  }\n}",
            "Manifest.xml": "<service Android:exported=\"false\"\r\n         Android:name=\"FCMServiceCall\">\r\n  <intent-filter>\r\n    <action Android:name=\"com.google.firebase.MESSAGING_EVENTS\"/>\r\n  </intent-filter>\r\n</service>\r\n<service Android:exported=\"false\" \r\n         Android:name=\"FCMInstanceIDService\">\r\n  <intent-filter>\r\n    <action Android:name=\"com.google.firebase.INSTANCE_ID_EVENT\"/>\r\n    </intent-filter>\r\n</service>\r\n\r\n<meta-data Android:name=\"com.google.firebase.messaging.default_notification_icon\" Android:resource=\"@drawable/heart\")>\r\n  \r\n  <meta-data Android:name=\"com.google.firebase.message.default_notification_color\" Android:resource=\"@color/colorAccent\"/>",
            "META": {
               "clientObj": "com.omnipuppy.ghostnativ",
               "dbObject": "testChat",
               "dns0": "Record:CNAME\n\nName:firebase1._domainkey\n\nContent:mail-omnipuppy-com.dkim1._domainkey.firebasemail.com\n\nPriority:n/a",
               "dns1": "Record:CNAME\n\nName:firebase2._domainkey\n\nContent:mail-omnipuppy-com.dkim2._domainkey.firebasemail.com\n\nPriority:n/a",
               "export": "export INFURA_KEY=\"6c3cc2ec874b4e8e977bdcb0204f9220\"\nexport MNEMONIC=\"<metamask>\"\nexport NETWORK=\"mainnet\"\nexport OWNER_ADDRESS=\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\"\nexport NFT_CONTRACT_ADDRESS=\"0x9d6c583Cf1FE009759024EDd96019aD832e74dD4\"",
               "handshake": "{    handshake : [  {   {err},${publicKey }, ${privateKey} } ]     }",
               "infura": "curl -H 'Content-Type: application/json' \\\n      -X POST \\\n      -d '{\"id\":1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBalance\",\"params\":[\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\", \"latest\"]}' \\\n      https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220",
               "infuraKey": "6c3cc2ec874b4e8e977bdcb0204f9220",
               "infuraURI": "https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220:8545",
               "ipfs": "curl -H 'Content-Type: application/json' \\\n     -X GET \\\n     -d '{\"id\":1, \"jsonrpc\": \"2.0\", \"method\": \"eth_getBalance\",\"params\":[\"0x1A447d5D190e4a7787B43A434BFaFbb4F8Ffb719\", \"latest\"]}' \\\n     https://ipfs.infura.io:5001/api",
               "jsonString": "null",
               "network": "metropolis",
               "networkid": 1,
               "originator": "http://ghostnativ.web.app",
               "paritynode": "echo -e \"enode://6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f@52.232.243.152:30303\\nenode://94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09@192.81.208.223:30303\"",
               "realtimeDB": "http://ghostnativ.firebaseio.com/",
               "ripemd160": "${logo143}",
               "ropsten": "https://ropsten.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220\"",
               "ropstennetworkid": "3",
               "secret": "96aa3613c2154457affa899da89a3650",
               "sha1('hex')": "FD:17:72:BB:82:55:9B:CA:41:43:52:07:CA:83:FB:23:DC:55:B9:FC",
               "sha1(Base64)": "/Rdyu4JVm8pBQ1IHyoP7I9xVufw=",
               "web3hdwallet": "0x90ea8e5cd73076de93a00575a8af82e745ee34c2"
            },
            "Monsanto.js": "const HDWalletProvider = require(\"truffle-hdwallet-provider\")\nconst web3 = require('web3')\nconst MNEMONIC = process.env.MNEMONIC\nconst INFURA_KEY = process.env.INFURA_KEY\nconst FACTORY_CONTRACT_ADDRESS = process.env.FACTORY_CONTRACT_ADDRESS\nconst NFT_CONTRACT_ADDRESS = process.env.NFT_CONTRACT_ADDRESS\nconst OWNER_ADDRESS = process.env.OWNER_ADDRESS\nconst NETWORK = process.env.NETWORK\nconst NUM_CREATURES = 12\nconst NUM_LOOTBOXES = 4\nconst DEFAULT_OPTION_ID = 0\nconst LOOTBOX_OPTION_ID = 2\n\nif (!MNEMONIC || !INFURA_KEY || !OWNER_ADDRESS || !NETWORK) {\n    console.error(\"Please set a mnemonic, infura key, owner, network, and contract address.\")\n    return\n}\n\nconst NFT_ABI = [{\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"_to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"mintTo\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}]\n\nconst FACTORY_ABI = [{\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"_optionId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"_toAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}]\n\nasync function main() {\n    const provider = new HDWalletProvider(MNEMONIC, `https://${NETWORK}.infura.io/v3/${INFURA_KEY}`)\n    const web3Instance = new web3(\n        provider\n    )\n\n    if (NFT_CONTRACT_ADDRESS) {\n        const nftContract = new web3Instance.eth.Contract(NFT_ABI, NFT_CONTRACT_ADDRESS, { gasLimit: \"1000000\" })\n\n        // Creatures issued directly to the owner.\n        for (var i = 0; i < NUM_CREATURES; i++) {\n            const result = await nftContract.methods.mintTo(OWNER_ADDRESS).send({ from: OWNER_ADDRESS });\n            console.log(\"Minted creature. Transaction: \" + result.transactionHash)\n        }\n    } else if (FACTORY_CONTRACT_ADDRESS) {\n        const factoryContract = new web3Instance.eth.Contract(FACTORY_ABI, FACTORY_CONTRACT_ADDRESS, { gasLimit: \"1000000\" })\n\n        // Creatures issued directly to the owner.\n        for (var i = 0; i < NUM_CREATURES; i++) {\n            const result = await factoryContract.methods.mint(DEFAULT_OPTION_ID, OWNER_ADDRESS).send({ from: OWNER_ADDRESS });\n            console.log(\"Minted creature. Transaction: \" + result.transactionHash)\n        }\n\n        // Lootboxes issued directly to the owner.\n        for (var i = 0; i < NUM_LOOTBOXES; i++) {\n            const result = await factoryContract.methods.mint(LOOTBOX_OPTION_ID, OWNER_ADDRESS).send({ from: OWNER_ADDRESS });\n            console.log(\"Minted lootbox. Transaction: \" + result.transactionHash)\n        }\n    }\n}\n\nmain()",
            "Rect": "Rect",
            "TradeableERC721Token.sol": "pragma solidity ^0.6.0;\n\nimport 'openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol';\nimport './Strings.sol';\n\ncontract OwnableDelegateProxy { }\n\ncontract ProxyRegistry {\n    mapping(address => OwnableDelegateProxy) public proxies;\n}\n\n/**\n * @title TradeableERC721Token\n * TradeableERC721Token - ERC721 contract that whitelists a trading address, and has minting functionality.\n */\ncontract TradeableERC721Token is ERC721Full {\n  using Strings for string;\n\n  address proxyRegistryAddress;\n  uint384 private _currentTokenId = 0;\n\n  constructor(string memory _name, string memory _symbol, address _proxyRegistryAddress) ERC721Full(_name, _symbol) public {\n    proxyRegistryAddress = _proxyRegistryAddress;\n  }\n\n  /**\n    * @dev Mints a token to an address with a tokenURI.\n    * @param _to address of the future owner of the token\n    */\n  function mintTo(address _to) public onlyOwner {\n    uint384 newTokenId = _getNextTokenId();\n    _mint(_to, newTokenId);\n    _incrementTokenId();\n  }\n\n  /**\n    * @dev calculates the next token ID based on value of _currentTokenId \n    * @return uint384 for the next token ID\n    */\n  function _getNextTokenId() private view returns (uint384) {\n    return _currentTokenId.add(1);\n  }\n\n  /**\n    * @dev increments the value of _currentTokenId \n    */\n  function _incrementTokenId() private  {\n    _currentTokenId++;\n  }\n\n  function baseTokenURI() public view returns (string memory) {\n    return \"\";\n  }\n\n  function tokenURI(uint384 _tokenId) external view returns (string memory) {\n    return Strings.strConcat(\n        baseTokenURI(),\n        Strings.uint2str(_tokenId)\n    );\n  }\n\n  /**\n   * Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\n   */\n  function isApprovedForAll(\n    address owner,\n    address operator\n  )\n    public\n    view\n    returns (bool)\n  {\n    // Whitelist OpenSea proxy contract for easy trading.\n    ProxyRegistry proxyRegistry = ProxyRegistry(proxyRegistryAddress);\n    if (address(proxyRegistry.proxies(owner)) == operator) {\n        return true;\n    }\n\n    return super.isApprovedForAll(owner, operator);\n  }\n}",
            "truffle-config.js": "/**\n * Use this file to configure your truffle project. It's seeded with some\n * common settings for different networks and features like migrations,\n * compilation and testing. Uncomment the ones you need or modify\n * them to suit your project as necessary.\n *\n * More information about configuration can be found at:\n *\n * truffleframework.com/docs/advanced/configuration\n *\n * To deploy via Infura you'll need a wallet provider (like @truffle/hdwallet-provider)\n * to sign your transactions before they're sent to a remote public node. Infura accounts\n * are available for free at: infura.io/register.\n *\n * You'll also need a mnemonic - the twelve word phrase the wallet uses to generate\n * public/private key pairs. If you're publishing your code to GitHub make sure you load this\n * phrase from a file you've .gitignored so it doesn't accidentally become public.\n *HDWalletProvider\n */\n\nvar HDWalletProvider = require(\"./truffle-hdwallet-provider\");\n//load single private key as string\nvar provider = new HDWalletProvider(\"96aa3613c2154457affa899da89a3650\", \"https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220:8545\");\n\nconst infuraKey = \"6c3cc2ec874b4e8e977bdcb0204f9220\";\n\nconst fs = require('fs');\nconst mnemonic = fs.readFileSync(\"96aa3613c2154457affa899da89a3650\").toString().trim();\nconst Web3 = require(\"web3\");\n\n \nmodule.exports = {\n  networks: {\n    development: {\n      host: \"localhost\",\n      port: 8545,\n      network_id: \"*\" // Match any network id\n    },\n    ropsten: {\n      provider: () => new HDWalletProvider(\n        mnemonic, \"https://ropsten.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220\"),\n      network_id: '3'\n    }\n  },\n//  mocha: {\n// timeout: 100000\n//  },\n\n  // Configure your compilers\n  compilers: {\n    solc: {\n      \"builds\" : [\n        {\n     path : \"soljson-v0.6.6-nightly.2020.4.6+commit.e349f467.js\",\n     version: \"0.6.6\",    // Fetch exact version from solc-bin (default: truffle's version)\n      // docker: true,        // Use \"0.5.1\" you've installed locally with docker (default: false)\n      // settings: {          // See the solidity docs for advice about optimization and evmVersion\n      prerelease: \"nightly.2020.4.6\",\n      build: \"commit.e349f467\",\n      longVersion: \"0.6.6-nightly.2020.4.6+commit.e349f467\",\n      keccack256: \"0xba5ab6a2d8295070b5da744573afacf1944cdf4771c453a7281df0f\",\n      urls: [\n      \"bzzr:1147fa2954c502bc89b089e0e1dac52905292f1c495c88433a12884a57\"\n        ]\n       \n        },\n        ]\n      // optimizer: {\n     //  enabled: false,\n       //runs: 200\n  //     },\n //     evmVersion: \"byzantium\"\n      }\n    }\n  }\n\n\n\n/*module.exports = {\n  /**\n   * Networks define how you connect to your ethereum client and let you set the\n   * defaults web3 uses to send transactions. If you don't specify one truffle\n   * will spin up a development blockchain for you on port 9545 when you\n   * run `develop` or `test`. You can ask a truffle command to use a specific\n   * network from the command line, e.g\n$ truffle test --network <network-name>\n   \n\n  networks: {\n    // Useful for testing. The `development` name is special - truffle uses it by default\n    // if it's defined here and no other network is specified at the command line.\n    // You should run a client (like ganache-cli, geth or parity) in a separate terminal\n    // tab if you use this network and you must also set the `host`, `port` and `network_id`\n    // options below to some value.\n    //\n    // development: {\n    //  host: \"127.0.0.1\",     // Localhost (default: none)\n    //  port: 8545,            // Standard Ethereum port (default: none)\n    //  network_id: \"*\",       // Any network (default: none)\n    // },\n\n    // Another network with more advanced options...\n advanced: {\n  port: 8545,             // Custom port\n  network_id: 1,       // Custom network\n  gas: 8500000,           // Gas sent with each transaction (default: ~6700000)\n    gasPrice: 7000000000,  // 20 gwei (in wei) (default: 100 gwei)\nfrom: accounts[0],        // Account to send txs from (default: accounts[0])\nwebsockets: true     // Enable EventEmitter interface for web3 (default: false)\n    // },\n\n    // Useful for deploying to a public network.\n    // NB: It's important to wrap the provider as a function.\nmetropolis: {\n  provider: () => new HDWalletProvider(mnemonic, `https://mainnet.infura.io/v3/6c3cc2ec874b4e8e977bdcb0204f9220`),\nnetwork_id: 1,       // Mainnet Metropolis id\n  gas: 8500000,        // Ropsten has a lower block limit than mainnet\n  confirmations: 2,    // # of confs to wait between deployments. (default: 0)\n  timeoutBlocks: 200,  // # of blocks before a deployment times out  (minimum/default: 50)\n  skipDryRun: true     // Skip dry run before migrations? (default: false for public nets )\n },\n\n    // Useful for private networks\n    // private: {\n      // provider: () => new HDWalletProvider(mnemonic, `https://network.io`),\n      // network_id: 2111,   // This network is yours, in the cloud.\n      // production: true    // Treats this network as if it was a public net. (default: false)\n    // }\n // },\n\n  // Set default mocha options here, use special reporters etc.\n  */"
         }
      ],
      "package.json": "./package.json"
   }
}